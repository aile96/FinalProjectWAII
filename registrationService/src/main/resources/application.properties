server.error.include-message=never
server.port=8080
spring.application.name=registrationService

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5432/registration
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.show-sql=false
spring.jpa.open-in-view=true
spring.jpa.hibernate.ddl-auto=validate

registrationService.app.firstUser=admin
registrationService.app.firstPass=admin
registrationService.app.jwtSecret=Tweety
registrationService.app.expirationJwt=60
registrationService.app.notFilteredList=/user/register,/user/validate,/user/login

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=webapp2.g25@gmail.com
spring.mail.password=1a2s3d4fqwer
mail.transport.protocol=smtp
mail.smtp.auth=true
mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

#eureka
eureka.client.service-url.default.zone=http://localhost:8761/eureka/

#indicates the frequency that client sends heartbeat to server to indicate that it's alive
eureka.instance.lease-renewal-interval-in-seconds=30

#indicates the duration that sever waits since it received the last heartbeat before it can evict an instance from its registry
eureka.instance.lease-expiration-duration-in-seconds=90

#load balancing
ribbon.eureka.enabled=true